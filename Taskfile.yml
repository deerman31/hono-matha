version: "3"

vars:
  COMPOSEFILE: "./srcs/docker-compose.yml"
  COMPOSE: docker compose -f {{.COMPOSEFILE}}
  COLOR: '\033[1;33m'
  RESET: '\033[0m'

silent: true

tasks:
  build:
    desc: Build and start the containers in detached mode, then bring them up
    cmds:
      - echo -e "{{.COLOR}}BUILD{{.RESET}}"
      - "{{.COMPOSE}} up -d --build"
      - "{{.COMPOSE}} up"

  up:
    cmds:
      - echo -e "{{.COLOR}}UP{{.RESET}}"
      - "{{.COMPOSE}} up"

  down:
    desc: Stop and remove the containers, networks, and volumes
    cmds:
      - echo -e "{{.COLOR}}DOWN{{.RESET}}"
      - "{{.COMPOSE}} down"

  stop:
    desc: Stop the running containers without removing them
    cmds:
      - echo -e "{{.COLOR}}STOP{{.RESET}}"
      - "{{.COMPOSE}} stop"

  restart:
    desc: Restart the running containers
    cmds:
      - echo -e "{{.COLOR}}RESTART{{.RESET}}"
      - "{{.COMPOSE}} restart"

  clean:
    desc: Stop and remove all containers, volumes, images, and orphan containers
    cmds:
      - echo -e "{{.COLOR}}CLEAN{{.RESET}}"
      - "{{.COMPOSE}} down -v --rmi local"

  prune:
    desc: Perform system-wide cleanup (use with caution)
    cmds:
      - echo -e "{{.COLOR}}PRUNE{{.RESET}}"
      - "{{.COMPOSE}} down -v"
      - docker system prune -af
      - docker volume prune -f

  re:
    desc: Restart the services by running down followed by build
    cmds:
      - task: down
      - task: build

  status:
    desc: Show the status of containers, images, volumes, and networks
    cmds:
      - echo -e "{{.COLOR}}Containers{{.RESET}}"
      - docker ps -a
      - echo -e "{{.COLOR}}Images{{.RESET}}"
      - docker images
      - echo -e "{{.COLOR}}Volumes{{.RESET}}"
      - docker volume ls
      - echo -e "{{.COLOR}}Networks{{.RESET}}"
      - docker network ls

  default:
    cmds:
      - task: build
